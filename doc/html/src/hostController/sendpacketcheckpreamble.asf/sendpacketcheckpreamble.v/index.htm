<html>
<head>
<title>sendpacketcheckpreamble.v</title>
<link rel="stylesheet" href="./../../../../css/hde.css">
<meta name="Author" content="Steve, Base2Designs">
<meta name="Generator" content="Active-HDL, Version 6.3.1444, Expiration Date: September 30, 2004\n\nCopyright © ALDEC, Inc. All rights reserved.">
</head>
<body>
<pre>
<span id=t_com>//////////////////////////////////////////////////////////////////////</span>
<span id=t_com>////                                                              ////</span>
<span id=t_com>//// sendPacketCheckPreamble</span>
<span id=t_com>////                                                              ////</span>
<span id=t_com>//// This file is part of the usbhostslave opencores effort.</span>
<span id=t_com>//// http://www.opencores.org/cores/????/                         ////</span>
<span id=t_com>////                                                              ////</span>
<span id=t_com>//// Module Description:                                          ////</span>
<span id=t_com>//// </span>
<span id=t_com>////                                                              ////</span>
<span id=t_com>//// To Do:                                                       ////</span>
<span id=t_com>//// </span>
<span id=t_com>////                                                              ////</span>
<span id=t_com>//// Author(s):                                                   ////</span>
<span id=t_com>//// - Steve Fielding, sfielding@base2designs.com                 ////</span>
<span id=t_com>////                                                              ////</span>
<span id=t_com>//////////////////////////////////////////////////////////////////////</span>
<span id=t_com>////                                                              ////</span>
<span id=t_com>//// Copyright (C) 2004 Steve Fielding and OPENCORES.ORG          ////</span>
<span id=t_com>////                                                              ////</span>
<span id=t_com>//// This source file may be used and distributed without         ////</span>
<span id=t_com>//// restriction provided that this copyright statement is not    ////</span>
<span id=t_com>//// removed from the file and that any derivative work contains  ////</span>
<span id=t_com>//// the original copyright notice and the associated disclaimer. ////</span>
<span id=t_com>////                                                              ////</span>
<span id=t_com>//// This source file is free software; you can redistribute it   ////</span>
<span id=t_com>//// and/or modify it under the terms of the GNU Lesser General   ////</span>
<span id=t_com>//// Public License as published by the Free Software Foundation; ////</span>
<span id=t_com>//// either version 2.1 of the License, or (at your option) any   ////</span>
<span id=t_com>//// later version.                                               ////</span>
<span id=t_com>////                                                              ////</span>
<span id=t_com>//// This source is distributed in the hope that it will be       ////</span>
<span id=t_com>//// useful, but WITHOUT ANY WARRANTY; without even the implied   ////</span>
<span id=t_com>//// warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR      ////</span>
<span id=t_com>//// PURPOSE. See the GNU Lesser General Public License for more  ////</span>
<span id=t_com>//// details.                                                     ////</span>
<span id=t_com>////                                                              ////</span>
<span id=t_com>//// You should have received a copy of the GNU Lesser General    ////</span>
<span id=t_com>//// Public License along with this source; if not, download it   ////</span>
<span id=t_com>//// from http://www.opencores.org/lgpl.shtml                     ////</span>
<span id=t_com>////                                                              ////</span>
<span id=t_com>//////////////////////////////////////////////////////////////////////</span>
<span id=t_com>//</span>
<span id=t_com>// $Id: index.htm,v 1.1.1.1 2004-10-11 03:59:06 sfielding Exp $</span>
<span id=t_com>//</span>
<span id=t_com>// CVS Revision History</span>
<span id=t_com>//</span>
<span id=t_com>// $Log: not supported by cvs2svn $</span>
<span id=t_com>//</span>


<span id=t_dir>`timescale</span> <span id=t_cns>1</span><span id=t_idt>ns</span> / <span id=t_cns>1</span><span id=t_idt>ps</span>
<span id=t_dir>`include</span> <span id=t_cns>"usbConstants_h.v"</span>

<span id=t_kwd>module</span> <span id=t_idt>sendPacketCheckPreamble</span> (<span id=t_idt>clk</span>, <span id=t_idt>fullSpeedBitRate</span>, <span id=t_idt>fullSpeedPolarity</span>, <span id=t_idt>grabLineControl</span>, <span id=t_idt>preAmbleEnable</span>, <span id=t_idt>rst</span>, <span id=t_idt>sendPacketCPPID</span>, <span id=t_idt>sendPacketCPReady</span>, <span id=t_idt>sendPacketCPWEn</span>, <span id=t_idt>sendPacketPID</span>, <span id=t_idt>sendPacketRdy</span>, <span id=t_idt>sendPacketWEn</span>);
<span id=t_kwd>input</span>   <span id=t_idt>clk</span>;
<span id=t_kwd>input</span>   <span id=t_idt>preAmbleEnable</span>;
<span id=t_kwd>input</span>   <span id=t_idt>rst</span>;
<span id=t_kwd>input</span>   [<span id=t_cns>3</span>:<span id=t_cns>0</span>] <span id=t_idt>sendPacketCPPID</span>;
<span id=t_kwd>input</span>   <span id=t_idt>sendPacketCPWEn</span>;
<span id=t_kwd>input</span>   <span id=t_idt>sendPacketRdy</span>;
<span id=t_kwd>output</span>  <span id=t_idt>fullSpeedBitRate</span>;
<span id=t_kwd>output</span>  <span id=t_idt>fullSpeedPolarity</span>;
<span id=t_kwd>output</span>  <span id=t_idt>grabLineControl</span>;   <span id=t_com>// mux select</span>
<span id=t_kwd>output</span>  <span id=t_idt>sendPacketCPReady</span>;
<span id=t_kwd>output</span>  [<span id=t_cns>3</span>:<span id=t_cns>0</span>] <span id=t_idt>sendPacketPID</span>;
<span id=t_kwd>output</span>  <span id=t_idt>sendPacketWEn</span>;

<span id=t_kwd>wire</span>    <span id=t_idt>clk</span>;
<span id=t_kwd>reg</span>     <span id=t_idt>fullSpeedBitRate</span>, <span id=t_idt>next_fullSpeedBitRate</span>;
<span id=t_kwd>reg</span>     <span id=t_idt>fullSpeedPolarity</span>, <span id=t_idt>next_fullSpeedPolarity</span>;
<span id=t_kwd>reg</span>     <span id=t_idt>grabLineControl</span>, <span id=t_idt>next_grabLineControl</span>;
<span id=t_kwd>wire</span>    <span id=t_idt>preAmbleEnable</span>;
<span id=t_kwd>wire</span>    <span id=t_idt>rst</span>;
<span id=t_kwd>wire</span>    [<span id=t_cns>3</span>:<span id=t_cns>0</span>] <span id=t_idt>sendPacketCPPID</span>;
<span id=t_kwd>reg</span>     <span id=t_idt>sendPacketCPReady</span>, <span id=t_idt>next_sendPacketCPReady</span>;
<span id=t_kwd>wire</span>    <span id=t_idt>sendPacketCPWEn</span>;
<span id=t_kwd>reg</span>     [<span id=t_cns>3</span>:<span id=t_cns>0</span>] <span id=t_idt>sendPacketPID</span>, <span id=t_idt>next_sendPacketPID</span>;
<span id=t_kwd>wire</span>    <span id=t_idt>sendPacketRdy</span>;
<span id=t_kwd>reg</span>     <span id=t_idt>sendPacketWEn</span>, <span id=t_idt>next_sendPacketWEn</span>;

<span id=t_com>// BINARY ENCODED state machine: sendPktCP</span>
<span id=t_com>// State codes definitions:</span>
<span id=t_dir>`define</span> <span id=t_idt>SPC_WAIT_EN</span> <span id=t_cns>4'b0000</span>
<span id=t_dir>`define</span> <span id=t_idt>START_SPC</span> <span id=t_cns>4'b0001</span>
<span id=t_dir>`define</span> <span id=t_idt>CHK_PREAM</span> <span id=t_cns>4'b0010</span>
<span id=t_dir>`define</span> <span id=t_idt>PREAM_PKT_SND_PREAM</span> <span id=t_cns>4'b0011</span>
<span id=t_dir>`define</span> <span id=t_idt>PREAM_PKT_WAIT_RDY1</span> <span id=t_cns>4'b0100</span>
<span id=t_dir>`define</span> <span id=t_idt>PREAM_PKT_WAIT_RDY2</span> <span id=t_cns>4'b0101</span>
<span id=t_dir>`define</span> <span id=t_idt>PREAM_PKT_SND_PID</span> <span id=t_cns>4'b0110</span>
<span id=t_dir>`define</span> <span id=t_idt>PREAM_PKT_WAIT_RDY3</span> <span id=t_cns>4'b0111</span>
<span id=t_dir>`define</span> <span id=t_idt>REG_PKT_SEND_PID</span> <span id=t_cns>4'b1000</span>
<span id=t_dir>`define</span> <span id=t_idt>REG_PKT_WAIT_RDY1</span> <span id=t_cns>4'b1001</span>
<span id=t_dir>`define</span> <span id=t_idt>REG_PKT_WAIT_RDY</span> <span id=t_cns>4'b1010</span>
<span id=t_dir>`define</span> <span id=t_idt>READY</span> <span id=t_cns>4'b1011</span>

<span id=t_kwd>reg</span> [<span id=t_cns>3</span>:<span id=t_cns>0</span>] <span id=t_idt>CurrState_sendPktCP</span>;
<span id=t_kwd>reg</span> [<span id=t_cns>3</span>:<span id=t_cns>0</span>] <span id=t_idt>NextState_sendPktCP</span>;


<span id=t_com>//--------------------------------------------------------------------</span>
<span id=t_com>// Machine: sendPktCP</span>
<span id=t_com>//--------------------------------------------------------------------</span>
<span id=t_com>//----------------------------------</span>
<span id=t_com>// NextState logic (combinatorial)</span>
<span id=t_com>//----------------------------------</span>
<span id=t_kwd>always</span> @ (<span id=t_idt>sendPacketCPPID</span> <span id=t_kwd>or</span> <span id=t_idt>sendPacketCPWEn</span> <span id=t_kwd>or</span> <span id=t_idt>preAmbleEnable</span> <span id=t_kwd>or</span> <span id=t_idt>sendPacketRdy</span> <span id=t_kwd>or</span> <span id=t_idt>sendPacketCPReady</span> <span id=t_kwd>or</span> <span id=t_idt>sendPacketWEn</span> <span id=t_kwd>or</span> <span id=t_idt>sendPacketPID</span> <span id=t_kwd>or</span> <span id=t_idt>fullSpeedBitRate</span> <span id=t_kwd>or</span> <span id=t_idt>fullSpeedPolarity</span> <span id=t_kwd>or</span> <span id=t_idt>grabLineControl</span> <span id=t_kwd>or</span> <span id=t_idt>CurrState_sendPktCP</span>)
<span id=t_kwd>begin</span> : <span id=t_idt>sendPktCP_NextState</span>
  <span id=t_idt>NextState_sendPktCP</span> &lt;= <span id=t_idt>CurrState_sendPktCP</span>;
  <span id=t_com>// Set default values for outputs and signals</span>
  <span id=t_idt>next_sendPacketCPReady</span> &lt;= <span id=t_idt>sendPacketCPReady</span>;
  <span id=t_idt>next_sendPacketWEn</span> &lt;= <span id=t_idt>sendPacketWEn</span>;
  <span id=t_idt>next_sendPacketPID</span> &lt;= <span id=t_idt>sendPacketPID</span>;
  <span id=t_idt>next_fullSpeedBitRate</span> &lt;= <span id=t_idt>fullSpeedBitRate</span>;
  <span id=t_idt>next_fullSpeedPolarity</span> &lt;= <span id=t_idt>fullSpeedPolarity</span>;
  <span id=t_idt>next_grabLineControl</span> &lt;= <span id=t_idt>grabLineControl</span>;
  <span id=t_kwd>case</span> (<span id=t_idt>CurrState_sendPktCP</span>) <span id=t_com>// synopsys parallel_case full_case</span>
   `<span id=t_idt>SPC_WAIT_EN</span>:
     <span id=t_kwd>if</span> (<span id=t_idt>sendPacketCPWEn</span> == <span id=t_cns>1'b1</span>) 
     <span id=t_kwd>begin</span>
      <span id=t_idt>NextState_sendPktCP</span> &lt;= `<span id=t_idt>CHK_PREAM</span>;
      <span id=t_idt>next_sendPacketCPReady</span> &lt;= <span id=t_cns>1'b0</span>;
     <span id=t_kwd>end</span>
   `<span id=t_idt>START_SPC</span>:
     <span id=t_idt>NextState_sendPktCP</span> &lt;= `<span id=t_idt>SPC_WAIT_EN</span>;
   `<span id=t_idt>CHK_PREAM</span>:
     <span id=t_kwd>if</span> (<span id=t_idt>preAmbleEnable</span> == <span id=t_cns>1'b1</span>)  
      <span id=t_idt>NextState_sendPktCP</span> &lt;= `<span id=t_idt>PREAM_PKT_WAIT_RDY1</span>;
     <span id=t_kwd>else</span>
      <span id=t_idt>NextState_sendPktCP</span> &lt;= `<span id=t_idt>REG_PKT_WAIT_RDY1</span>;
   `<span id=t_idt>READY</span>:
   <span id=t_kwd>begin</span>
     <span id=t_idt>next_sendPacketCPReady</span> &lt;= <span id=t_cns>1'b1</span>;
     <span id=t_idt>NextState_sendPktCP</span> &lt;= `<span id=t_idt>SPC_WAIT_EN</span>;
   <span id=t_kwd>end</span>
   `<span id=t_idt>PREAM_PKT_SND_PREAM</span>:
   <span id=t_kwd>begin</span>
     <span id=t_idt>next_sendPacketWEn</span> &lt;= <span id=t_cns>1'b1</span>;
     <span id=t_idt>next_sendPacketPID</span> &lt;= `<span id=t_idt>PREAMBLE</span>;
     <span id=t_idt>NextState_sendPktCP</span> &lt;= `<span id=t_idt>PREAM_PKT_WAIT_RDY2</span>;
     <span id=t_idt>next_sendPacketWEn</span> &lt;= <span id=t_cns>1'b0</span>;
   <span id=t_kwd>end</span>
   `<span id=t_idt>PREAM_PKT_WAIT_RDY1</span>:
     <span id=t_kwd>if</span> (<span id=t_idt>sendPacketRdy</span> == <span id=t_cns>1'b1</span>) 
     <span id=t_kwd>begin</span>
      <span id=t_idt>NextState_sendPktCP</span> &lt;= `<span id=t_idt>PREAM_PKT_SND_PREAM</span>;
      <span id=t_idt>next_fullSpeedBitRate</span> &lt;= <span id=t_cns>1'b1</span>;
      <span id=t_idt>next_fullSpeedPolarity</span> &lt;= <span id=t_cns>1'b1</span>;
      <span id=t_idt>next_grabLineControl</span> &lt;= <span id=t_cns>1'b1</span>;
     <span id=t_kwd>end</span>
   `<span id=t_idt>PREAM_PKT_WAIT_RDY2</span>:
     <span id=t_kwd>if</span> (<span id=t_idt>sendPacketRdy</span> == <span id=t_cns>1'b1</span>) 
     <span id=t_kwd>begin</span>
      <span id=t_idt>NextState_sendPktCP</span> &lt;= `<span id=t_idt>PREAM_PKT_SND_PID</span>;
      <span id=t_idt>next_fullSpeedBitRate</span> &lt;= <span id=t_cns>1'b1</span>;
     <span id=t_kwd>end</span>
   `<span id=t_idt>PREAM_PKT_SND_PID</span>:
   <span id=t_kwd>begin</span>
     <span id=t_idt>next_sendPacketWEn</span> &lt;= <span id=t_cns>1'b1</span>;
     <span id=t_idt>next_sendPacketPID</span> &lt;= <span id=t_idt>sendPacketCPPID</span>;
     <span id=t_idt>NextState_sendPktCP</span> &lt;= `<span id=t_idt>PREAM_PKT_WAIT_RDY3</span>;
     <span id=t_idt>next_sendPacketWEn</span> &lt;= <span id=t_cns>1'b0</span>;
   <span id=t_kwd>end</span>
   `<span id=t_idt>PREAM_PKT_WAIT_RDY3</span>:
     <span id=t_kwd>if</span> (<span id=t_idt>sendPacketRdy</span> == <span id=t_cns>1'b1</span>) 
     <span id=t_kwd>begin</span>
      <span id=t_idt>NextState_sendPktCP</span> &lt;= `<span id=t_idt>READY</span>;
      <span id=t_idt>next_grabLineControl</span> &lt;= <span id=t_cns>1'b0</span>;
     <span id=t_kwd>end</span>
   `<span id=t_idt>REG_PKT_SEND_PID</span>:
   <span id=t_kwd>begin</span>
     <span id=t_idt>next_sendPacketWEn</span> &lt;= <span id=t_cns>1'b1</span>;
     <span id=t_idt>next_sendPacketPID</span> &lt;= <span id=t_idt>sendPacketCPPID</span>;
     <span id=t_idt>NextState_sendPktCP</span> &lt;= `<span id=t_idt>REG_PKT_WAIT_RDY</span>;
   <span id=t_kwd>end</span>
   `<span id=t_idt>REG_PKT_WAIT_RDY1</span>:
     <span id=t_kwd>if</span> (<span id=t_idt>sendPacketRdy</span> == <span id=t_cns>1'b1</span>) 
      <span id=t_idt>NextState_sendPktCP</span> &lt;= `<span id=t_idt>REG_PKT_SEND_PID</span>;
   `<span id=t_idt>REG_PKT_WAIT_RDY</span>:
   <span id=t_kwd>begin</span>
     <span id=t_idt>next_sendPacketWEn</span> &lt;= <span id=t_cns>1'b0</span>;
     <span id=t_idt>NextState_sendPktCP</span> &lt;= `<span id=t_idt>READY</span>;
   <span id=t_kwd>end</span>
  <span id=t_kwd>endcase</span>
<span id=t_kwd>end</span>

<span id=t_com>//----------------------------------</span>
<span id=t_com>// Current State Logic (sequential)</span>
<span id=t_com>//----------------------------------</span>
<span id=t_kwd>always</span> @ (<span id=t_kwd>posedge</span> <span id=t_idt>clk</span>)
<span id=t_kwd>begin</span> : <span id=t_idt>sendPktCP_CurrentState</span>
  <span id=t_kwd>if</span> (<span id=t_idt>rst</span>) 
   <span id=t_idt>CurrState_sendPktCP</span> &lt;= `<span id=t_idt>START_SPC</span>;
  <span id=t_kwd>else</span>
   <span id=t_idt>CurrState_sendPktCP</span> &lt;= <span id=t_idt>NextState_sendPktCP</span>;
<span id=t_kwd>end</span>

<span id=t_com>//----------------------------------</span>
<span id=t_com>// Registered outputs logic</span>
<span id=t_com>//----------------------------------</span>
<span id=t_kwd>always</span> @ (<span id=t_kwd>posedge</span> <span id=t_idt>clk</span>)
<span id=t_kwd>begin</span> : <span id=t_idt>sendPktCP_RegOutput</span>
  <span id=t_kwd>if</span> (<span id=t_idt>rst</span>) 
  <span id=t_kwd>begin</span>
   <span id=t_idt>sendPacketWEn</span> &lt;= <span id=t_cns>1'b0</span>;
   <span id=t_idt>sendPacketPID</span> &lt;= <span id=t_cns>4'b0</span>;
   <span id=t_idt>fullSpeedBitRate</span> &lt;= <span id=t_cns>1'b0</span>;
   <span id=t_idt>fullSpeedPolarity</span> &lt;= <span id=t_cns>1'b0</span>;
   <span id=t_idt>grabLineControl</span> &lt;= <span id=t_cns>1'b0</span>;
   <span id=t_idt>sendPacketCPReady</span> &lt;= <span id=t_cns>1'b1</span>;
  <span id=t_kwd>end</span>
  <span id=t_kwd>else</span> 
  <span id=t_kwd>begin</span>
   <span id=t_idt>sendPacketWEn</span> &lt;= <span id=t_idt>next_sendPacketWEn</span>;
   <span id=t_idt>sendPacketPID</span> &lt;= <span id=t_idt>next_sendPacketPID</span>;
   <span id=t_idt>fullSpeedBitRate</span> &lt;= <span id=t_idt>next_fullSpeedBitRate</span>;
   <span id=t_idt>fullSpeedPolarity</span> &lt;= <span id=t_idt>next_fullSpeedPolarity</span>;
   <span id=t_idt>grabLineControl</span> &lt;= <span id=t_idt>next_grabLineControl</span>;
   <span id=t_idt>sendPacketCPReady</span> &lt;= <span id=t_idt>next_sendPacketCPReady</span>;
  <span id=t_kwd>end</span>
<span id=t_kwd>end</span>

<span id=t_kwd>endmodule</span>
</pre>
</body>
</html>
